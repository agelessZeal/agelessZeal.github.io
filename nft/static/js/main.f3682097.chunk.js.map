{"version":3,"sources":["reportWebVitals.js","index.js","components/Alert.js","constants.js","App.js","utils/ipfs.js","assets/logo.png","assets/forgeButton.png","assets/uploadButton.png","components/Header.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","Alert","title","content","type","link","useState","open","setOpen","className","variant","onClose","dismissible","Heading","href","target","ZUT_ADDRESS","process","FORGE_ADDRESS","ZERO_ADDRESS","BLOCK_EXPLORER","NETWORK_ID","parseInt","RPC_PROVIDER","utc","require","dayjs","extend","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","torus","Torus","networkParams","host","networkId","config","buildEnv","authereum","Authereum","web3Modal","Web3Modal","network","cacheProvider","theme","account","setAccount","file","setFile","fileName","setFileName","amountTokens","setAmountTokens","name","setName","description","setDescription","option1Checked","setOption1Checked","tokenAddress","setTokenAddress","minBalance","setMinBalance","option2Checked","setOption2Checked","Date","toISOString","slice","expirationDate","setExpirationDate","expirationTime","setExpirationTime","isPaymentETH","setIsPaymentETH","forgeContract","setForgeContract","zutContract","setZutContract","error","setError","confirmation","setConfirmation","setLink","toWei","num","window","web3","utils","String","fromWei","Number","connectWeb3","useCallback","a","connect","provider","on","acc","Web3","eth","getAccounts","zut","Contract","erc20Abi","forge","forgeAbi","events","TransferSingle","returnValues","to","console","log","from","id","message","addToIpfs","ipfs","add","progress","prog","added","cid","toString","createToken","ipfsHash","tokenCondition","minBalanceCondition","expirationCondition","unix","attributes","push","display_type","trait_type","value","schema","image","tokenInfo","JSON","stringify","schemaHash","methods","ethFee","call","buyWithETH","send","tx","zutFee","allowance","infinite","toBN","pow","sub","approve","buyWithZUT","logout","clearCachedProvider","src","alt","onChange","e","_file","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","result","loadFile","files","htmlFor","uploadButton","Group","as","Row","Label","column","sm","Control","placeholder","Check","Input","checked","controlId","step","time","label","forgeButton","onClick","ipfsClient","port","protocol","Header","substring","size"],"mappings":"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","file":"static/js/main.f3682097.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState } from \"react\";\nimport { Alert as Alert2, Row } from \"react-bootstrap\";\n\nexport default function Alert({ title, content, type, link }) {\n  const [open, setOpen] = useState(true);\n\n  return (\n    open && (\n      <Row className=\"justify-content-center\">\n        <Alert2\n          className=\"w-50\"\n          variant={type}\n          onClose={() => setOpen(false)}\n          dismissible\n        >\n          {title && <Alert2.Heading>{title}</Alert2.Heading>}\n          <p>{content}</p>\n          {link && (\n            <div>\n              View your token details{\" \"}\n              <a href={link} target=\"_blank\">\n                here\n              </a>\n            </div>\n          )}\n        </Alert2>\n      </Row>\n    )\n  );\n}\n","export const ZUT_ADDRESS = process.env.REACT_APP_ZUT_ADDRESS;\nexport const FORGE_ADDRESS = process.env.REACT_APP_FORGE_ADDRESS;\nexport const ZERO_ADDRESS = process.env.REACT_APP_ZERO_ADDRESS;\nexport const BLOCK_EXPLORER = process.env.REACT_APP_BLOCK_EXPLORER;\nexport const NETWORK_ID = parseInt(process.env.REACT_APP_NETWORK_ID, 10) || 137;\nexport const RPC_PROVIDER = process.env.REACT_APP_RPC_PROVIDER;\n","import { useState, useCallback } from \"react\";\nimport { Container, Row, Col, Image, Form } from \"react-bootstrap\";\nimport dayjs from \"dayjs\";\nimport ipfs from \"./utils/ipfs\";\nimport TimePicker from \"react-bootstrap-time-picker\";\n\n// Web3\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Torus from \"@toruslabs/torus-embed\";\nimport Authereum from \"authereum\";\n// import { erc20Abi, forgeAbi } from \"./abis\";\nimport { abi as erc20Abi } from \"./abis/ERC20.json\";\nimport { abi as forgeAbi } from \"./abis/ForgeToken.json\";\nimport { FORGE_ADDRESS, ZUT_ADDRESS, ZERO_ADDRESS } from \"./constants\";\n\n// CSS\nimport \"./App.css\";\n\n// Images\nimport image from \"./assets/logo.png\";\nimport forgeButton from \"./assets/forgeButton.png\";\nimport uploadButton from \"./assets/uploadButton.png\";\n\n// Components\nimport Header from \"./components/Header\";\nimport Alert from \"./components/Alert\";\n\nimport { NETWORK_ID, RPC_PROVIDER } from \"./constants\";\n\nvar utc = require(\"dayjs/plugin/utc\");\ndayjs.extend(utc);\n\n// Web3 Modal\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      // infuraId: \"36bbdc3ed5bd449fad0374a2e07b850a\", // required\n      rpc: {\n        [NETWORK_ID]: RPC_PROVIDER,\n      },\n    },\n  },\n  torus: {\n    package: Torus, // required\n    options: {\n      networkParams: {\n        host: RPC_PROVIDER, // optional\n        networkId: NETWORK_ID, // optional\n      },\n      config: {\n        buildEnv: \"production\", // optional\n      },\n    },\n  },\n  authereum: {\n    package: Authereum,\n  },\n};\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions, // required\n  theme: \"dark\",\n});\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  // Details\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState(null);\n  const [amountTokens, setAmountTokens] = useState(0);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  // Min Balance Condition\n  const [option1Checked, setOption1Checked] = useState(false);\n  const [tokenAddress, setTokenAddress] = useState(ZUT_ADDRESS);\n  const [minBalance, setMinBalance] = useState(0);\n\n  // Expiration Condition\n  const [option2Checked, setOption2Checked] = useState(false);\n  const [expirationDate, setExpirationDate] = useState(\n    new Date().toISOString().slice(0, 10)\n  );\n  const [expirationTime, setExpirationTime] = useState(0);\n\n  // Expiration Condition\n  const [isPaymentETH, setIsPaymentETH] = useState(true);\n\n  // Web3\n  const [forgeContract, setForgeContract] = useState(null);\n  const [zutContract, setZutContract] = useState(null);\n\n  // Alerts\n  const [error, setError] = useState(null);\n  const [confirmation, setConfirmation] = useState(null);\n  const [link, setLink] = useState(null);\n\n  // Functions\n  const logout = () => {\n    setAccount(null);\n    web3Modal.clearCachedProvider();\n  };\n\n  const toWei = (num) => window.web3.utils.toWei(String(num));\n  const fromWei = (num) => Number(window.web3.utils.fromWei(String(num)));\n\n  const reset = () => {\n    setFile(null);\n    setFileName(null);\n    setName(null);\n    setDescription(null);\n    setOption1Checked(false);\n    setTokenAddress(ZUT_ADDRESS);\n    setMinBalance(null);\n    setOption2Checked(false);\n    setExpirationTime(null);\n    setIsPaymentETH(true);\n  };\n\n  const connectWeb3 = useCallback(async () => {\n    try {\n      const provider = await web3Modal.connect();\n\n      provider.on(\"accountsChanged\", (acc) => {\n        setAccount(acc[0]);\n      });\n\n      window.web3 = new Web3(provider);\n\n      const acc = await window.web3.eth.getAccounts();\n      setAccount(acc[0]);\n\n      window.zut = new window.web3.eth.Contract(erc20Abi, ZUT_ADDRESS);\n      window.forge = new window.web3.eth.Contract(forgeAbi, FORGE_ADDRESS);\n\n      setZutContract(window.zut);\n      setForgeContract(window.forge);\n\n      // Suscribe to Burn Events\n      window.forge.events\n        .TransferSingle()\n        .on(\"data\", async ({ returnValues }) => {\n          if (returnValues.to === ZERO_ADDRESS) {\n            console.log(\"Token Burned!\", returnValues.from, returnValues.id);\n          }\n        });\n\n      console.log(\"Connected Account: \", acc[0]);\n    } catch (error) {\n      console.log(error.message);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const loadFile = (_file) => {\n    setFileName(_file.name);\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(_file);\n    reader.onloadend = () => {\n      // console.log(Buffer(reader.result));\n      setFile(Buffer(reader.result));\n    };\n  };\n\n  const addToIpfs = async (content) => {\n    console.log(\"adding to IPFS...\");\n    const added = await ipfs.add(content, {\n      progress: (prog) => console.log(`received: ${prog}`),\n    });\n    return added.cid.toString();\n  };\n\n  const createToken = async () => {\n    console.log(\"Paying with ETH?\", isPaymentETH);\n    console.log(`Creating ${amountTokens} NFTs...`);\n\n    if (!option1Checked && !option2Checked)\n      return console.log(\"Must select at least one condition\");\n\n    try {\n      const ipfsHash = await addToIpfs(file);\n      console.log(\"File Ipfs Hash\", ipfsHash);\n\n      const tokenCondition = option1Checked ? tokenAddress : ZERO_ADDRESS;\n      const minBalanceCondition = option1Checked ? minBalance : 0;\n      const expirationCondition = option2Checked\n        ? dayjs(expirationDate).unix() + expirationTime\n        : 0;\n\n      const attributes = [];\n      if (expirationCondition > 0) {\n        attributes.push({\n          display_type: \"date\",\n          trait_type: \"Expiration\",\n          value: expirationCondition,\n        });\n      }\n\n      if (minBalanceCondition > 0) {\n        attributes.push({\n          trait_type: \"Min Balance\",\n          value: minBalanceCondition,\n        });\n        attributes.push({\n          trait_type: \"Min Token\",\n          value: tokenCondition,\n        });\n      }\n\n      const schema = {\n        name,\n        description,\n        image: \"ipfs://\" + ipfsHash,\n        attributes,\n      };\n\n      console.log(\"Token Schema\", schema);\n\n      const tokenInfo = JSON.stringify(schema);\n      const schemaHash = await addToIpfs(tokenInfo);\n\n      console.log(\"Schema Ipfs Hash\", schemaHash);\n\n      let tx;\n      if (isPaymentETH) {\n        const ethFee = await forgeContract.methods.ethFee().call();\n        console.log(\"ETH FEE\", fromWei(ethFee));\n\n        tx = await forgeContract.methods\n          .buyWithETH(\n            amountTokens,\n            tokenCondition,\n            toWei(minBalanceCondition),\n            expirationCondition,\n            schemaHash\n          )\n          .send({ from: account, value: amountTokens * ethFee });\n      } else {\n        const zutFee = await forgeContract.methods.zutFee().call();\n        console.log(\"ZUT FEE\", fromWei(zutFee));\n\n        const allowance = await zutContract.methods\n          .allowance(account, FORGE_ADDRESS)\n          .call();\n        console.log(\"Allowance\", fromWei(allowance));\n        if (allowance < fromWei(amountTokens * zutFee)) {\n          const infinite = window.web3.utils\n            .toBN(2)\n            .pow(window.web3.utils.toBN(256).sub(window.web3.utils.toBN(1)));\n          await zutContract.methods\n            .approve(FORGE_ADDRESS, infinite)\n            .send({ from: account });\n        }\n\n        tx = await forgeContract.methods\n          .buyWithZUT(\n            amountTokens,\n            tokenCondition,\n            toWei(minBalanceCondition),\n            expirationCondition,\n            schemaHash\n          )\n          .send({ from: account });\n      }\n\n      const { id } = tx.events.TransferSingle.returnValues;\n      setConfirmation(\n        `Successfully created ${amountTokens} tokens with id #${id}`\n      );\n      setLink(\n        `https://opensea.io/assets/matic/${FORGE_ADDRESS}/${id}`\n      );\n      console.log(\"Tx Receipt\", tx);\n\n      reset();\n    } catch (error) {\n      setError(error.message);\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <Header account={account} logout={logout} connectWeb3={connectWeb3} />\n      <Container className=\"mt-5\">\n        <Row className=\"justify-content-center\">\n          <Col>\n            <Image src={image} className=\"logo\" alt=\"NFT Forge Logo\"></Image>\n          </Col>\n          <Col>\n            {/* File Upload */}\n            <div>\n              {!file && (\n                <>\n                  <div id=\"upload-container\">\n                    <div id=\"fileUpload\">\n                      <input\n                        id=\"file\"\n                        type=\"file\"\n                        name=\"file\"\n                        className=\"inputfile\"\n                        onChange={(e) => loadFile(e.target.files[0])}\n                      />\n                      <label htmlFor=\"file\" id=\"fileLabel\">\n                        <img src={uploadButton} className=\"upload-button\" />\n                      </label>\n                    </div>\n                  </div>\n                  <p className=\"mt-4\">\n                    Please upload a PNG, GIF, WEBP, or MP4 Max 30mb\n                  </p>\n                </>\n              )}\n              {fileName && (\n                <label htmlFor=\"file\" className=\"mb\">\n                  <strong>File Uploaded: </strong>\n                  {fileName}\n                </label>\n              )}\n\n              <Form className=\"mt-5\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm=\"3\">\n                    NFT Name\n                  </Form.Label>\n                  <Col sm=\"9\" className=\"align-self-center\">\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Project Name\"\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row}>\n                  <Form.Label column sm=\"3\">\n                    Description\n                  </Form.Label>\n                  <Col sm=\"9\" className=\"align-self-center\">\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Project Description\"\n                      onChange={(e) => setDescription(e.target.value)}\n                    />\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row}>\n                  <Form.Label column sm=\"3\">\n                    Amount Tokens\n                  </Form.Label>\n                  <Col sm=\"9\" className=\"align-self-center\">\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"100\"\n                      onChange={(e) => setAmountTokens(e.target.value)}\n                    />\n                  </Col>\n                </Form.Group>\n              </Form>\n              <p className=\"mt-5\">\n                Please add specialized properties to the NFT (select one or\n                multiple):{\" \"}\n              </p>\n            </div>\n\n            {/* Option 1: Min Balance in Owner Wallet */}\n            <div className=\"ml-3\">\n              <Form.Check type={\"checkbox\"}>\n                <Form.Check.Input\n                  type={\"checkbox\"}\n                  onChange={(e) => setOption1Checked(e.target.checked)}\n                />\n                <Form.Check.Label>{`Holder must hold specific quantity of tokens`}</Form.Check.Label>\n              </Form.Check>\n\n              {option1Checked && (\n                <Form className=\"mt-2 ml-2\">\n                  {/* <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                    <Form.Label column sm=\"3\">\n                      Token Address\n                    </Form.Label>\n                    <Col sm=\"9\" className=\"align-self-center\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder={`Eg. ${ZUT_ADDRESS}`}\n                        value={tokenAddress}\n                        readOnly={true}\n                        // onChange={(e) => setTokenAddress(e.target.value)}\n                      />\n                    </Col>\n                  </Form.Group> */}\n\n                  <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                    <Form.Label column sm=\"3\">\n                      Minimum Balance Of ZUT\n                    </Form.Label>\n                    <Col sm=\"9\" className=\"align-self-center\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Eg. 1000\"\n                        onChange={(e) => setMinBalance(e.target.value)}\n                      />\n                    </Col>\n                  </Form.Group>\n                </Form>\n              )}\n            </div>\n\n            {/* Option 2: Expiration Time */}\n            <div className=\"mt-4 ml-3\">\n              <Form.Check type={\"checkbox\"}>\n                <Form.Check.Input\n                  type={\"checkbox\"}\n                  onChange={(e) => setOption2Checked(e.target.checked)}\n                />\n                <Form.Check.Label>{`NFT Auto Destructs at (Local Time Zone)`}</Form.Check.Label>\n              </Form.Check>\n              {option2Checked && (\n                <Form className=\"mt-2 ml-2\">\n                  <Form.Control\n                    type=\"date\"\n                    value={expirationDate}\n                    onChange={(e) => setExpirationDate(e.target.value)}\n                    className=\"mb-3 w-50\"\n                  />\n                  <TimePicker\n                    className=\"w-50\"\n                    step={60}\n                    value={expirationTime}\n                    onChange={(time) => setExpirationTime(time)}\n                  />\n                </Form>\n              )}\n            </div>\n\n            {/* Select Payment */}\n            <div className=\"mt-4 ml-3\">\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label as=\"legend\" column sm=\"4\">\n                  Payment Type\n                </Form.Label>\n                <Col sm=\"8\" className=\"align-self-center\">\n                  <Form.Check\n                    type=\"radio\"\n                    label=\"MATIC\"\n                    checked={isPaymentETH}\n                    onChange={(e) => setIsPaymentETH(true)}\n                  />\n                  <Form.Check\n                    type=\"radio\"\n                    label=\"ZUT\"\n                    checked={!isPaymentETH}\n                    onChange={(e) => setIsPaymentETH(false)}\n                  />\n                </Col>\n              </Form.Group>\n            </div>\n\n            {/* Token Creation */}\n            {account && file && (\n              <div className=\"mt-4\">\n                <Image\n                  src={forgeButton}\n                  alt=\"NFT Forge Button\"\n                  className=\"forge-button\"\n                  onClick={createToken}\n                />\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n      {error && <Alert type=\"danger\" content={error} />}\n      {confirmation && (\n        <Alert type=\"success\" content={confirmation} link={link} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import ipfsClient from \"ipfs-http-client\";\n\nconst ipfs = ipfsClient({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n});\n\nexport default ipfs;\n","export default __webpack_public_path__ + \"static/media/logo.1bf4baeb.png\";","export default __webpack_public_path__ + \"static/media/forgeButton.76bf08c9.png\";","export default __webpack_public_path__ + \"static/media/uploadButton.32dcdfa8.png\";","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { BLOCK_EXPLORER } from \"../constants\";\n\nexport default function Header({ account, logout, connectWeb3 }) {\n  return (\n    <div className=\"float-right\">\n      {account ? (\n        <>\n          <h5 className=\"mr-3\">\n            Connected:{\" \"}\n            <a\n              href={`${BLOCK_EXPLORER}/address/${account}`}\n              target=\"_blank\"\n              className=\"account-link\"\n            >\n              {account.substring(0, 4) + \"...\" + account.substring(38, 42)}\n            </a>\n          </h5>\n          <div className=\"float-right\">\n            <Button\n              className=\"mr-5\"\n              variant=\"outline-secondary\"\n              size=\"sm\"\n              onClick={logout}\n            >\n              Logout\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Button\n          variant=\"secondary\"\n          onClick={connectWeb3}\n          className=\"connect-button mt-4 mr-5\"\n        >\n          Connect to Web3\n        </Button>\n      )}\n    </div>\n  );\n}\n"],"sourceRoot":""}